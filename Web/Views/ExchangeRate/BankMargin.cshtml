@model Tuple<List<BCC.Model.Models.CurrencyMetadata>, List<BCC.Model.Models.BankConnector>, string>
@{
    ViewData["Title"] = "Overview";
    Layout = "~/Views/Shared/_Layout.cshtml";

}




<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="modal-title" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-title">Add Margin</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row d-flex justify-content-around">
                    <div class="col-12 justify-content-center d-flex">
                        <div class="row mt-3 w-100 border border-info p-2 rounded ">
                            <div class="col  align-self-center text-nowrap justify-content-center m-1 d-flex">
                                Interval
                            </div>
                            <div class="col d-flex justify-content-center">
                                <select class="p-2 rounded" id="intervalSelect">
                                    <option value="7">7 days</option>
                                    <option value="14">14 days</option>
                                    <option value="30">30 days</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="col-12 justify-content-center d-flex">
                        <div class="row mt-3 w-100 border border-info p-2 rounded ">
                            <div class="col  align-self-center text-nowrap justify-content-center m-1 d-flex">
                                Bank
                            </div>
                            <div class="col d-flex justify-content-center">
                                <select class="p-2 rounded" id="bankSelect">
                                    @foreach (BCC.Model.Models.BankConnector item in Model.Item2)
                                    {
                                        <option value="@item.BankShortName">@item.BankShortName</option>
                                    }
                                </select>
                            </div>

                        </div>
                    </div>

                    <div class="col-12 justify-content-center d-flex">
                        <div class="row mt-3 w-100 border border-info p-2 rounded ">
                            <div class="col  align-self-center text-nowrap justify-content-center m-1 d-flex">
                                Currency
                            </div>
                            <div class="col d-flex justify-content-center">
                                <select class="p-2 rounded" id="currencySelect">
                                    @foreach (BCC.Model.Models.CurrencyMetadata item in Model.Item1)
                                    {
                                        <option value="@item.IsoName">@item.IsoName</option>
                                    }
                                </select>
                            </div>

                        </div>
                    </div>
                    <div class="col-12 justify-content-center d-flex">
                        <div class="row mt-3 w-100 border border-info p-2 rounded ">
                            <div class="col  align-self-center text-nowrap justify-content-center m-1 d-flex">
                                Operation
                            </div>
                            <div class="col d-flex justify-content-around">
                                <div class="form-check d-flex">
                                    <label class="form-check-label">
                                        <input type="radio" id="isBuy" class="form-check-input " name="optradio" checked>Buy
                                    </label>
                                </div>
                                <div class="form-check">
                                    <label class="form-check-label">
                                        <input type="radio" class="form-check-input " name="optradio">Sell
                                    </label>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal" id="addConfirm">Confirm</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div class="row d-flex justify-content-around">
    <div class="mt-2 justify-content-center d-flex align-self-center col-12 col-sm-5 col-md-4 5-lg-2">

        <div id="addBankMargin" class="btn btn-outline-info w-100" data-toggle="modal" data-target="#modal">
            Add Margin
        </div>
    </div>
</div>

<div class="row mt-5">
    <div class="col">
        <div class="d-flex flex-wrap justify-content-around " id="bankMarginContainer">



        </div>
    </div>
</div>
@section Scripts{
    <script>
        let modal = $('#modal');
        let container = $('#bankMarginContainer');
        let addOverviewButton = $('#addOverview');
        let intervalSelect = $('#intervalSelect');
        let currencySelect = $('#currencySelect');
        let bankSelect = $('#bankSelect');
        let isBuy = $('#isBuy');
        let addConfirm = $('#addConfirm');

        addConfirm.click(function () {

            let length = Number(intervalSelect.val());
            let dateNow = new Date();

            let endDate = new Date(dateNow.getFullYear(), dateNow.getMonth(), dateNow.getDate(), 23, 59, 59);
            let startDate = new Date(endDate.getTime());

            startDate = new Date(startDate.setDate(endDate.getDate() - length));

            let start = App.getFormatedDate(startDate);
            let end = App.getFormatedDate(endDate);
            App.getBankMarginGraph(container, start, end, bankSelect.val(), currencySelect.val(), isBuy.is(':checked'));
            modal.modal('hide');
        });





        setInterval(function () {
            App.refreshMargins(container);        
        }, 3600000);//3600000

        setInterval(App.updateMarginSession, 10000);

        App.restoreMarginFromSession(container, @Html.Raw(Model.Item3));


        $(window).on("beforeunload", function () {
            App.updateMarginSession();
           
        });
    </script>
}
